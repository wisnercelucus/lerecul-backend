# Generated by Django 4.1.3 on 2022-11-22 01:15

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('_id', models.CharField(default=uuid.uuid1, max_length=250, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('notified_on_incidents', models.BooleanField(blank=True, default=False, null=True)),
                ('notified_on_learning_notes', models.BooleanField(blank=True, default=False, null=True)),
                ('notified_on_stories', models.BooleanField(blank=True, default=False, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('new_account_notified', models.BooleanField(default=False)),
                ('preferred_language', models.CharField(blank=True, choices=[('en', 'English'), ('fr', 'French'), ('es', 'Spanish')], default='en', max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'permissions': (('approve_user', 'Can approve user'), ('activate_user', 'Can activate user'), ('deactivate_user', 'Can deactivate user')),
            },
        ),
        migrations.CreateModel(
            name='UserPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(default=uuid.uuid1, max_length=250, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_position_creator', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_position_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('approve_userposition', 'Can approve user position'),),
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(default=uuid.uuid1, max_length=250, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_role_creator', to=settings.AUTH_USER_MODEL)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_role_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('approve_userrole', 'Can approve user role'),),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_id', models.CharField(default=uuid.uuid1, max_length=250, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('sex', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Male'), ('other', 'Other'), ('no mention', 'No mention')], max_length=150, null=True)),
                ('phone_home', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_work', models.CharField(blank=True, max_length=150, null=True)),
                ('phone_mobile', models.CharField(blank=True, max_length=150, null=True)),
                ('apt_number', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('joined_on', models.DateField(blank=True, null=True)),
                ('quote', models.TextField(blank=True, null=True)),
                ('quote_author', models.CharField(blank=True, max_length=250, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('moto', models.CharField(blank=True, max_length=250, null=True)),
                ('linkedin_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('facebook_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('twitter_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('instagram_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('quora_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('github_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('reddit_profile_link', models.CharField(blank=True, max_length=250, null=True)),
                ('avatar', models.FileField(blank=True, max_length=500, null=True, upload_to=accounts.models.account_avatar_path)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userposition')),
                ('roles', models.ManyToManyField(blank=True, to='accounts.userrole')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_modifier', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('approve_userprofile', 'Can approve user profile'),),
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, to='accounts.userrole'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
